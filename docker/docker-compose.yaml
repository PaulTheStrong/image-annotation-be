services:
  image-annotation-be:
    mem_limit: 2g
    image: paulthestrong/image-annotation-be:1.0.1
    volumes:
      - image-data:/image-data
    environment:
      SPRING_DATASOURCE_HOST: postgres-image-annotation-be
      APPLICATION_STORAGE_BASE_PATH: /image-data
    networks:
      - back-end
    ports:
      - 8080:8080
    logging:
      driver: "local"
  #database
  postgres-image-annotation-be:
    mem_limit: 1024m
    image: postgres:15.3-alpine
    volumes:
      - pgdata:/var/lib/postgresql
    environment:
      POSTGRES_DB: annotationtool
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    ports:
      - 5432:5432
    networks:
      - back-end

  pgadmin4:
    mem_limit: 256m
    networks:
      - back-end
    image: dpage/pgadmin4:7.5
    ports:
      - 5050:80
    volumes:
      - ./pgadmin/servers.json:/pgadmin4/servers.json
      - ./pgadmin/pgpass:/pgadmin4/pgpass
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin@email.com
      PGADMIN_DEFAULT_PASSWORD: 12345678
    depends_on:
      - postgres-image-annotation-be

  # frontend
  frontend:
    image: image-annotation-fe:local
    environment:
      BACKEND_HOST: http://localhost:8080
    ports:
      - 80:80

  # efk
  elasticsearch:
    mem_limit: 3g
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.2
    networks:
      - back-end
    environment:
      discovery.type: "single-node"
      xpack.security.enabled: "false"
    ports:
      - 9200:9200
  kibana:
    mem_limit: 1g
    image: docker.elastic.co/kibana/kibana:8.9.2
    networks:
      - back-end
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
  fluentd:
    build: ./fluentd/
    user: root
    volumes:
      - ./fluentd/fluentd.conf:/fluentd/etc/fluentd.conf
      - /var/lib/docker/containers:/fluentd/log/containers:ro
      - ./fluentd/logs:/fluentd/log/output/
    networks:
      - back-end
    depends_on:
      - elasticsearch
    environment:
      FLUENTD_CONF: fluentd.conf
    ports:
      - 24224:24224

volumes:
  image-data:
  pgdata:

networks:
  back-end:
